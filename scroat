#!/bin/bash
#gyazo-like screenshot using shutter
# exit on first error

NOW="$(date +"%m.%d.%Y.%R")"
filename="/tmp/${NOW}.png"

function shot {
  # shutter -e -n -s -o "$filename" &>/dev/null
  # scrot -s "$filename" &>/dev/null
  # gnome-screenshot -a -f $filename &>/dev/null
  # flameshot config -f "%m.%d.%Y.%R" && flameshot gui -p /tmp/ &>/dev/null
  DIMS="$(slurp)"
  if [ -n "$DIMS" ]; 
  then
    grim -g "$DIMS" "$filename"
  else
    grim "$filename"
  fi
}

#idk how to implement closing the script when you press "esc" w/o complicating this

#while [[ "$key" == "$'\e'" ]]
#  do
#    exit 0
#done

shot

ACTION=$(zenity --question --title 'Scroat: Image capture options' \
    --text 'Image captured' \
    --extra-button Save \
    --extra-button 'Copy to clipboard' \
    --extra-button Imgur \
    --extra-button Cancel \
    --switch \
    --width 200 \
    --height 100 \
  )

if [ -n "${ACTION}" ]; then
  case $ACTION in
    Save)
      NEW_FILE=$(zenity --file-selection --save --confirm-overwrite --filename=".png")
      mv "$filename" "$NEW_FILE"
      ;;
    'Copy to clipboard')
      xclip -selection clipboard -t image/png -i "$filename"
      ;;
    Imgur)
      clientid="c9a6efb3d7932fd"
      content_type="image/png"


      function upload {
          curl -sH "Authorization: Client-ID $clientid" -H "Expect: " -F "image=@$filename" "https://api.imgur.com/3/image.xml"
      }

      response=$(upload)

      url="${response##*<link>}"
      url="${url%%</link>*}"
      delete_hash="${response##*<deletehash>}"
      delete_hash="${delete_hash%%</deletehash>*}"
      ${url//^http:/https:shift}
      echo "Delete page: https://imgur.com/delete/$delete_hash" >&2

      xdg-open "$url" &>/dev/null

      if [ "$url" == "" ]; then
        echo "url empty, the screenshot binary listed in the script is either not installed or quit unexpectedly"
      fi
      ;;
  esac
fi

rm -f "$filename"

exit 0
